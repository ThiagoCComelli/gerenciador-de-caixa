{"version":3,"sources":["utils/api/db.js","actions/index.js","components/Tag/Tag.js","components/NewItem/NewItem.js","components/ItemsTable/ItemsTable.js","pages/Dashboard/Dashboard.js","utils/api/auth.js","pages/Login/Login.js","pages/Home/Home.js","components/Navbar/Navbar.js","components/Modal/ModalNewAccount/ModalNewAccount.js","components/Modal/ModalEditTransaction/ModalEditTransaction.js","components/Modal/Modal.js","components/Notification/Notification.js","components/ProtectedRoute/ProtectedRoute.js","components/App.js","reducers/index.js","reducers/reducers.js","index.js"],"names":["url","newAccount","user","account","token","a","axios","post","data","result","getAccounts","email","get","params","newTransaction","getTransactions","account_id","deleteTransaction","id","delete","deleteAccount","newTag","deleteTag","updateTransaction","signIn","type","payload","putPost","putNotification","notification","Tag","tag","handleRemoveTag","useState","state","setState","useEffect","className","titulo","onClick","style","cursor","fontSize","color","NewItem","handleNewItem","accountId","title","description","model","value","date","tags","newItem","setNewItem","setTags","useSelector","dispatch","useDispatch","handleSubmit","e","preventDefault","objNewItem","transaction","localStorage","getItem","res","undefined","nome","filter","handleChange","target","utcDate","Date","toISOString","slice","replace","getTime","getTimezoneOffset","onSubmit","onChange","required","map","placeholder","onKeyDown","key","toLowerCase","handleTags","name","min","step","Item","item","setItems","handleUpdate","handleDelete","tipo","descricao","modalidade","valor","d","month","getMonth","day","getDate","year","getFullYear","length","join","formatDate","dataMomento","props","ItemsTable","items","allItems","setAllItems","index","sort","b","randomstring","Dashboard","history","useHistory","message","getTransacoes","location","transactions","push","Object","entries","loginAPI","registerAPI","verifyTokenAPI","LoginDiv","changeScreen","RegisterDiv","Login","senha","senhaDenovo","dados","setDados","setItem","window","alert","Account","conta","div","useRef","onContextMenu","current","transform","setTimeout","to","pathname","ref","NewAccount","Home","contas","setContas","getAccountsFromAPI","accounts","Navbar","isLogged","removeItem","ModalNewAccount","handleClose","ModalEditTransaction","then","defaultValue","Modal","component","NEW_POST","EDIT_TRAN","Notification","removeNotification","onAnimationEnd","status","ProtectedRoute","Component","rest","render","path","App","havePost","allNotifications","notifications","verify","setup","exact","allReducers","combineReducers","action","codes","myStore","createStore","allReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","store","document","getElementById"],"mappings":"+yEAEMA,EAAM,2BAENC,EAAU,uCAAG,WAAOC,EAAKC,EAAQC,GAApB,eAAAC,EAAA,+EAEUC,IAAMC,KAAN,UAAcP,EAAd,qBAAsC,CACvDQ,KAAM,CACFN,KAAMA,EACNC,QAASA,EACTC,MAAOA,KANJ,cAELK,EAFK,yBASJA,GATI,yDAWJ,MAXI,yDAAH,0DAgBVC,EAAW,uCAAG,WAAOC,EAAMP,GAAb,eAAAC,EAAA,+EAESC,IAAMM,IAAN,UAAaZ,EAAb,sBAAsC,CAACa,OAAQ,CAChEF,MAAOA,EACPP,MAAOA,KAJC,cAENK,EAFM,yBAMLA,GANK,yDAQL,MARK,yDAAH,wDAaXK,EAAc,uCAAG,WAAON,GAAP,eAAAH,EAAA,+EAEMC,IAAMC,KAAN,UAAcP,EAAd,yBAA0CQ,GAFhD,cAETC,EAFS,yBAGRA,GAHQ,yDAKR,MALQ,yDAAH,sDAUdM,EAAe,uCAAG,WAAOJ,EAAMK,EAAWZ,GAAxB,eAAAC,EAAA,+EAEKC,IAAMM,IAAN,UAAaZ,EAAb,0BAA0C,CAACa,OAAQ,CACpEG,WAAYA,EACZL,MAAOA,EACPP,MAAOA,KALK,cAEVK,EAFU,yBAOTA,GAPS,yDAST,MATS,yDAAH,0DAcfQ,EAAiB,uCAAG,WAAMN,EAAMO,EAAGd,GAAf,eAAAC,EAAA,+EAEGC,IAAMa,OAAN,UAAgBnB,EAAhB,4BAA+C,CAACa,OAAQ,CACzEK,GAAIA,EACJP,MAAOA,EACPP,MAAOA,KALO,cAEZK,EAFY,yBAOXA,GAPW,yDASX,MATW,yDAAH,0DAcjBW,EAAa,uCAAG,WAAMT,EAAMO,EAAGd,GAAf,eAAAC,EAAA,+EAEOC,IAAMa,OAAN,UAAgBnB,EAAhB,wBAA2C,CAACa,OAAQ,CACrEK,GAAIA,EACJP,MAAOA,EACPP,MAAOA,KALG,cAERK,EAFQ,yBAOPA,GAPO,yDASP,MATO,yDAAH,0DAcbY,EAAM,uCAAG,WAAMb,GAAN,eAAAH,EAAA,+EAEcC,IAAMC,KAAN,UAAcP,EAAd,iBAAkCQ,GAFhD,cAEDC,EAFC,yBAGAA,GAHA,yDAKA,MALA,yDAAH,sDASNa,EAAS,uCAAG,WAAMX,EAAMO,EAAGd,GAAf,eAAAC,EAAA,+EAEWC,IAAMa,OAAN,UAAgBnB,EAAhB,oBAAuC,CAACa,OAAQ,CACjEK,GAAIA,EACJP,MAAOA,EACPP,MAAOA,KALD,cAEJK,EAFI,yBAOHA,GAPG,yDASH,MATG,yDAAH,0DAaTc,EAAiB,uCAAG,WAAMf,GAAN,eAAAH,EAAA,+EAEGC,IAAMC,KAAN,UAAcP,EAAd,4BAA6CQ,GAFhD,cAEZC,EAFY,yBAGXA,GAHW,yDAKX,MALW,yDAAH,sD,sBCrGVe,EAAS,SAACtB,GACnB,MAAO,CACHuB,KAAM,UACNC,QAASxB,IAUJyB,EAAU,SAACpB,GACpB,MAAO,CACHkB,KAAM,WACNC,QAASnB,IAIJqB,EAAkB,SAACC,GAC5B,MAAO,CACHJ,KAAM,mBACNC,QAASG,I,gCCNFC,EAlBH,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,IAAIC,EAAqB,EAArBA,gBACd,EAAyBC,mBAAS,MAAlC,mBAAOC,EAAP,KAAaC,EAAb,KAOA,OALAC,qBAAU,WACND,EAASJ,KAEX,IAGE,mCACA,sBAAKM,UAAU,UAAf,UACI,+BAAON,EAAIO,SACX,cAAC,IAAD,CAAkBC,QAAS,WAAOP,EAAgBE,IAASG,UAAU,UAAUG,MAAO,CAACC,OAAQ,UAAUC,SAAU,GAAIC,MAAO,gBC0G3HC,G,MApHC,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,cAAcC,EAAe,EAAfA,UAC5B,EAA8Bb,mBAAS,CAACf,GAAG,EAAE6B,MAAM,GAAGC,YAAY,GAAGC,MAAM,SAASxB,KAAK,UAAUyB,MAAM,EAAEC,KAAK,KAAKC,KAAK,KAA1H,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAuBrB,mBAAS,IAAhC,mBAAOmB,EAAP,KAAYG,EAAZ,KACMrD,EAAOsD,aAAY,SAAAtB,GAAK,OAAIA,EAAMhC,QAClCuD,EAAWC,cAEXC,EAAY,uCAAG,WAAOC,GAAP,iBAAAvD,EAAA,6DACjBuD,EAAEC,kBAEEC,EAAaT,GACND,KAAOA,EAJD,SAMCtC,EAAe,CAACN,KAAK,CACnCL,QAAS,CACLe,GAAI4B,GAERiB,YAAaD,EACb5D,KAAMA,EACNE,MAAO4D,aAAaC,QAAQ,gBAZf,OAMXC,EANW,OAejB,SAC4BC,IAArBD,EAAI1D,KAAKL,SACRsD,EAAS7B,EAAgB,4BACzBiB,EAAcqB,EAAI1D,KAAKL,UAEvBsD,EAAS7B,EAAgB,0BAE/B,SACE6B,EAAS7B,EAAgB,iBAvBZ,2CAAH,sDAwCZI,EAAkB,SAACoC,GACrBb,EAAQH,EAAKiB,QAAO,SAACtC,GAAD,OAASA,IAAQqC,OAGnCE,EAAe,SAACV,GAClB,GAAmB,SAAhBA,EAAEW,OAAOrD,GAAe,CACvB,IAAIsD,EAAU,IAAIC,KAAKb,EAAEW,OAAOrB,OAAOwB,cAAcC,MAAM,EAAG,IAAIC,QAAQ,IAAK,KAC/EtB,EAAW,2BAAID,GAAL,kBAAeO,EAAEW,OAAOrD,GAAK,IAAIuD,KAAKD,EAAQK,UAA0C,IAA9BL,EAAQM,6BAE5ExB,EAAW,2BAAID,GAAL,kBAAeO,EAAEW,OAAOrD,GAAK0C,EAAEW,OAAOrB,UAIxD,OACI,sBAAKb,UAAU,cAAf,UACI,yDACA,sBAAM0C,SAAUpB,EAAhB,SACI,sBAAKtB,UAAU,sBAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,2CACA,uBAAOnB,GAAG,QAAQ8D,SAAUV,EAAc7C,KAAK,OAAOwD,UAAQ,OAElE,sBAAK5C,UAAU,yBAAf,UACI,oDACA,uBAAOnB,GAAG,cAAc8D,SAAUV,EAAc7C,KAAK,OAAOwD,UAAQ,UAG5E,qBAAK5C,UAAU,qBAAf,SACI,sBAAKA,UAAU,qBAAf,UACKe,EAAK8B,KAAI,SAACnD,GACP,OAAO,cAAC,EAAD,CAAKC,gBAAiBA,EAAiBD,IAAKA,GAAUA,EAAIb,OAErE,uBAAOiE,YAAY,aAAaC,UAAW,SAACxB,IA3CjD,SAACA,GACH,QAAVA,EAAEyB,KAA2B,UAAVzB,EAAEyB,MACpBzB,EAAEC,iBACqB,KAAnBD,EAAEW,OAAOrB,QACTK,EAAQ,GAAD,mBAAKH,GAAL,CAAU,CAACd,OAAOsB,EAAEW,OAAOrB,MAAMoC,kBACxC1B,EAAEW,OAAOrB,MAAQ,KAsC8CqC,CAAW3B,IAAKvB,UAAU,8BAGrF,sBAAKA,UAAU,qBAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,+CACA,yBAAQnB,GAAG,QAAQ8D,SAAUV,EAAckB,KAAK,WAAhD,UACI,wBAAQtC,MAAM,SAAd,oBACA,wBAAQA,MAAM,aAAd,8BAGR,sBAAKb,UAAU,yBAAf,UACI,yCACA,yBAAQnB,GAAG,OAAO8D,SAAUV,EAAckB,KAAK,OAA/C,UACI,wBAAQtC,MAAM,UAAd,qBACA,wBAAQA,MAAM,QAAd,yBAGR,sBAAKb,UAAU,yBAAf,UACI,0CACA,uBAAOnB,GAAG,QAAQ8D,SAAUV,EAAcmB,IAAK,EAAGC,KAAK,OAAOjE,KAAK,SAASwD,UAAQ,OAExF,sBAAK5C,UAAU,yBAAf,UACI,yCACA,uBAAOnB,GAAG,OAAO8D,SAAUV,EAAc7C,KAAK,OAAOwD,UAAQ,OAEjE,sBAAK5C,UAAU,yBAAf,UACI,yBACA,wBAAQZ,KAAK,SAASY,UAAU,gCAAhC,uC,0CC1GtBsD,G,MAAO,SAAC,GAAkD,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,aACnCtC,EAAWC,cAwBjB,OACI,qBAAIrB,UAAWuD,EAAKI,KAApB,UACI,6BAAKJ,EAAK1E,KACV,6BAAK0E,EAAKtD,SACV,6BAAKsD,EAAKK,YACV,6BAAKL,EAAKM,aACV,6BAAKN,EAAKI,OACV,oCAAOJ,EAAKO,SACZ,6BA9BW,SAAChD,GAChB,IAAIiD,EAAI,IAAI3B,KAAKtB,GACbkD,EAAQ,IAAMD,EAAEE,WAAa,GAC7BC,EAAM,GAAKH,EAAEI,UACbC,EAAOL,EAAEM,cAOb,OALIL,EAAMM,OAAS,IACfN,EAAQ,IAAMA,GACdE,EAAII,OAAS,IACbJ,EAAM,IAAMA,GAET,CAACA,EAAKF,EAAOI,GAAMG,KAAK,KAmBtBC,CAAWjB,EAAKkB,eACrB,+BAAI,cAAC,IAAD,CAAUvE,QAAS,WAhB3BkB,EAAS9B,EAAQ,CAACT,GAAG,YAAY6F,MAAM,CACnCnB,KAAMA,EACNC,SAAUA,EACVC,aAAcA,OAagCzD,UAAU,WAAU,cAAC,IAAD,CAAYE,QAAS,WAAOwD,EAAaH,EAAK1E,KAAMmB,UAAU,mBA2C7H2E,EAtCI,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,MAAMlB,EAA+B,EAA/BA,aAAaD,EAAkB,EAAlBA,aACpC,EAA+B7D,mBAAS,IAAxC,mBAAOiF,EAAP,KAAgBC,EAAhB,KAUA,OARA/E,qBAAU,WACN6E,EAAM/B,KAAI,SAACU,EAAKwB,GACZ,IAAIlD,EAAM,IAAIO,KAAKmB,EAAKkB,aACxB,OAAOG,EAAMG,GAAON,YAAc5C,KAEtCiD,EAAYF,EAAMI,MAAK,SAAChH,EAAEiH,GAAH,OAASA,EAAER,YAAczG,EAAEyG,kBACpD,CAACG,IAGC,qBAAK5E,UAAU,iBAAf,SACI,qBAAKA,UAAU,yBAAf,SACI,gCACI,kCACI,+BACI,wCACA,wCACA,iDACA,4CACA,sCACA,uCACA,sCACA,gDARKkF,eAURL,EAAShC,KAAI,SAACU,GACX,OACI,cAAC,EAAD,CAAMA,KAAMA,EAAMqB,MAAOA,EAAOnB,aAAcA,EAAcC,aAAcA,GAAmBwB,4BCK9GC,G,MAvEG,SAACT,GACf,IAAM7G,EAAOsD,aAAY,SAAAtB,GAAK,OAAIA,EAAMhC,QACxC,EAA0B+B,mBAAS,IAAnC,mBAAOgF,EAAP,KAAcpB,EAAd,KACM4B,EAAUC,cACVjE,EAAWC,cAgBXqC,EAAY,uCAAG,WAAO7E,GAAP,eAAAb,EAAA,sEACCY,EAAkBf,EAAKS,MAAMO,EAAG8C,aAAaC,QAAQ,cADtD,OACXC,EADW,OAGjB,IAC4B,8BAArBA,EAAI1D,KAAKmH,SACRlE,EAAS7B,EAAgB,+BACzBiE,EAASoB,EAAM5C,QAAO,SAAAuB,GAAI,OAAIA,EAAK1E,KAAOA,OAE1CuC,EAAS7B,EAAgB,6BAG/B,SACE6B,EAAS7B,EAAgB,iBAZZ,2CAAH,sDAmClB,OAjBAQ,qBAAU,WAEN,IAAMwF,EAAa,uCAAG,4BAAAvH,EAAA,sEACAU,EAAgBb,EAAKS,MAAOoG,EAAMc,SAAS3F,MAAMhB,GAAG8C,aAAaC,QAAQ,cADzE,QACZC,EADY,SAGd2B,EAAS3B,EAAI1D,KAAKsH,cAHJ,2CAAH,0DAOS3D,IAAzB4C,EAAMc,SAAS3F,MACduF,EAAQM,KAAK,KAEbH,MAGN,SAE0BzD,IAAzB4C,EAAMc,SAAS3F,MACP,6BAIP,qBAAKG,UAAU,gBAAf,SACI,sBAAKA,UAAU,wBAAf,UACI,yCAAY0E,EAAMc,SAAS3F,MAAMkC,QACjC,sDAAmB2C,EAAMc,SAAS3F,MAAM+D,aACxC,cAAC,EAAD,CAASnD,UAAWiE,EAAMc,SAAS3F,MAAMhB,GAAI2B,cA1DnC,SAACQ,GACnBwC,EAAS,GAAD,mBAAKoB,GAAL,CAAW5D,QA0DX,cAAC,EAAD,CAAYyC,aAvDH,SAAC5D,GAClB2D,EAASoB,EAAM/B,KAAI,SAACU,GAChB,GAAGA,EAAK1E,KAAOgB,EAAMhB,GAAI,OAAO0E,EAChC,IAAI,IAAJ,MAAiBoC,OAAOC,QAAQ/F,GAAhC,eAAwC,CAApC,IAAKmD,EAAL,uBACAO,EAAKP,GAAOnD,EAAMmD,GAEtB,OAAOO,OAiDqCG,aAAcA,EAAckB,MAAOA,WCxErFjH,EAAM,2BAENkI,EAAQ,uCAAG,WAAO1H,GAAP,eAAAH,EAAA,+EAEYC,IAAMC,KAAN,UAAcP,EAAd,eAAgCQ,GAF5C,cAEHC,EAFG,yBAGFA,GAHE,wHAAH,sDASR0H,EAAW,uCAAG,WAAO3H,GAAP,eAAAH,EAAA,+EAESC,IAAMC,KAAN,UAAcP,EAAd,kBAAmCQ,GAF5C,cAENC,EAFM,yBAGLA,GAHK,yDAKL,MALK,yDAAH,sDASX2H,EAAc,uCAAG,WAAO5H,GAAP,eAAAH,EAAA,+EAEMC,IAAMC,KAAN,UAAcP,EAAd,gBAAiCQ,GAFvC,cAETC,EAFS,yBAGZA,GAHY,yDAKR,MALQ,yDAAH,sDCfd4H,G,MAAW,SAAC,GAAiC,IAAhC/D,EAA+B,EAA/BA,aAAagE,EAAkB,EAAlBA,aAC5B,OACI,qCACA,oDACA,sBAAKjG,UAAU,eAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,yCACA,uBAAOnB,GAAG,QAAQ8D,SAAUV,EAAc7C,KAAK,OAAOwD,UAAQ,OAElE,sBAAK5C,UAAU,oBAAf,UACI,yCACA,uBAAOnB,GAAG,QAAQ8D,SAAUV,EAAc7C,KAAK,WAAWwD,UAAQ,OAEtE,sBAAK5C,UAAU,qBAAf,UACI,0BACA,uBAAOE,QAAS,WAAO+F,GAAa,IAApC,iCAEJ,qBAAKjG,UAAU,qBAAf,SACI,wBAAQZ,KAAK,SAAb,8BAOV8G,EAAc,SAAC,GAAiC,IAAhCjE,EAA+B,EAA/BA,aAAagE,EAAkB,EAAlBA,aAC/B,OACI,qCACA,gDACA,sBAAKjG,UAAU,eAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,iDACA,uBAAOnB,GAAG,OAAO8D,SAAUV,EAAc7C,KAAK,OAAOwD,UAAQ,OAEjE,sBAAK5C,UAAU,oBAAf,UACI,yCACA,uBAAOnB,GAAG,QAAQ8D,SAAUV,EAAc7C,KAAK,QAAQwD,UAAQ,OAEnE,sBAAK5C,UAAU,oBAAf,UACI,yCACA,uBAAOnB,GAAG,QAAQ8D,SAAUV,EAAc7C,KAAK,WAAWwD,UAAQ,OAEtE,sBAAK5C,UAAU,oBAAf,UACI,oDACA,uBAAOnB,GAAG,cAAc8D,SAAUV,EAAc7C,KAAK,WAAWwD,UAAQ,OAE5E,sBAAK5C,UAAU,qBAAf,UACI,0BACA,uBAAOE,QAAS,WAAO+F,GAAa,IAApC,4BAEJ,qBAAKjG,UAAU,qBAAf,SACI,wBAAQZ,KAAK,SAAb,+BAOD,SAAS+G,IACpB,MAAyBvG,oBAAS,GAAlC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAyBF,mBAAS,CAACtB,MAAM,GAAG8H,MAAM,GAAGC,YAAY,GAAGtE,KAAK,KAAzE,mBAAOuE,EAAP,KAAaC,EAAb,KACMnF,EAAWC,cACX+D,EAAUC,cAEV/D,EAAY,uCAAG,WAAOC,GAAP,eAAAvD,EAAA,yDACjBuD,EAAEC,kBAGC3B,EAJc,gCAKDgG,EAAS,CAAC,KAAO,CAAC,MAASS,EAAMhI,MAAM,MAASgI,EAAMF,SALrD,OAKbvE,EALa,8CAODiE,EAAY,CAAC,KAAO,CAAC,KAAOQ,EAAMvE,KAAK,MAAQuE,EAAMhI,MAAM,MAAQgI,EAAMF,SAPxE,OAObvE,EAPa,eAUjB,IACOA,EAAI1D,KAAKJ,OACRqD,EAASjC,EAAO0C,EAAI1D,KAAKN,OACzBuD,EAAS7B,EAAgB,kBACzBoC,aAAa6E,QAAQ,YAAa3E,EAAI1D,KAAKJ,OAC3CqH,EAAQM,KAAK,MAEbtE,EAAS7B,EAAgB,gBAG/B,MAAOgC,GACLkF,OAAOC,MAAM7E,GACbT,EAAS7B,EAAgB,iBAtBZ,4CAAH,sDA4BZ0C,EAAe,SAACV,GAClBgF,EAAS,2BAAID,GAAL,kBAAa/E,EAAEW,OAAOrD,GAAK0C,EAAEW,OAAOrB,UAGhD,OACI,mCACA,qBAAKb,UAAU,YAAf,SACI,sBAAM0C,SAAUpB,EAActB,UAAU,YAAxC,SACKH,EAAQ,cAAC,EAAD,CAAUoC,aAAcA,EAAcgE,aAAcnG,IAAc,cAAC,EAAD,CAAamC,aAAcA,EAAcgE,aAAcnG,U,qBClG5I6G,G,MAAU,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,MAAMlD,EAAkB,EAAlBA,aACdmD,EAAMC,iBAAO,MAkBnB,OACI,sBAAKC,cAAe,SAACxF,IAjBJ,SAACA,GAClBA,EAAEC,iBACEqF,EAAIG,QAAQ7G,MAAM8G,UAGlBJ,EAAIG,QAAQ7G,MAAQ,GAFpB0G,EAAIG,QAAQ7G,MAAM8G,UAAY,oBAIlC,IACIC,YAAW,WACY,OAAhBL,EAAIG,UAAkBH,EAAIG,QAAQ7G,MAAQ,MAC/C,KACJ,WAM0B8B,CAAaV,IAAKvB,UAAU,wBAAxD,UACI,qBAAKA,UAAU,4BAAf,SACI,wBAAQE,QAAS,WAAOwD,EAAakD,EAAM/H,KAA3C,uBAEJ,cAAC,IAAD,CAAMsB,MAAO,CAACG,MAAM,QAAS6G,GAAI,CAACC,SAAS,aAAavH,MAAM+G,GAA9D,SACI,sBAAKS,IAAKR,EAAK7G,UAAU,sBAAzB,UACI,6BAAK4G,EAAM7E,OACX,gCAAQ6E,EAAMhD,YACd,+BAAOgD,EAAM/H,eAO3ByI,GAAa,SAAC,GAAoB,IAAnB7D,EAAkB,EAAlBA,aACXrC,EAAWC,cAEjB,OACI,qBAAKnB,QAAS,WACVkB,EAAS9B,EAAQ,CAACT,GAAI,WAAY6F,MAAM,CACpCjB,aAAcA,OAEnBzD,UAAU,wBAJb,SAKI,sBAAKA,UAAU,sBAAf,UACI,cAAC,IAAD,CAASG,MAAO,CAACE,SAAU,MAC3B,kDA8DDkH,GAvDF,WACT,MAA2B3H,mBAAS,IAApC,mBAAO4H,EAAP,KAAcC,EAAd,KACM5J,EAAOsD,aAAY,SAAAtB,GAAK,OAAIA,EAAMhC,QAClCuD,EAAWC,cAEXqC,EAAY,uCAAG,WAAO7E,GAAP,eAAAb,EAAA,sEACCe,EAAclB,EAAKS,MAAMO,EAAG8C,aAAaC,QAAQ,cADlD,OACXC,EADW,OAGjB,IAC4B,8BAArBA,EAAI1D,KAAKmH,SACRlE,EAAS7B,EAAgB,2BACzBkI,EAAUD,EAAOxF,QAAO,SAAAuB,GAAI,OAAIA,EAAK1E,KAAOA,OAE5CuC,EAAS7B,EAAgB,yBAE/B,SACE6B,EAAS7B,EAAgB,iBAXZ,2CAAH,sDAiBZmI,EAAkB,uCAAG,4BAAA1J,EAAA,sEACLK,EAAYR,EAAKS,MAAMqD,aAAaC,QAAQ,cADvC,OACjBC,EADiB,OAEvB,IACI4F,EAAU5F,EAAI1D,KAAKwJ,UACrB,SACEvG,EAAS7B,EAAgB,iBALN,2CAAH,qDAkBxB,OALAQ,qBAAU,WACN2H,MAEF,IAGE,qBAAK1H,UAAU,WAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,8CACA,sBAAKA,UAAU,2BAAf,UACKwH,EAAO3E,KAAI,SAAC+D,EAAM7B,GACf,OAAO,cAAC,EAAD,CAASrB,aAAcA,EAA0BkD,MAAOA,GAAd7B,MAErD,cAAC,GAAD,CAAYtB,aAjBP,SAAC3F,GAClB2J,EAAU,GAAD,mBAAKD,GAAL,CAAY1J,iBC7Dd8J,I,MA3BA,WACX,IAAMC,EAAW1G,aAAY,SAAAtB,GAAK,OAAIA,EAAMhC,QAC5C,EAAyB+B,mBAAS,MAAlC,mBAAOC,EAAP,KAAaC,EAAb,KACMsB,EAAWC,cACX+D,EAAUC,cAEhBtF,qBAAU,WACND,EAAS+H,KACX,CAACA,IASH,OACI,qBAAK7H,UAAU,aAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,oBAAIE,QAAS,WAAOkF,EAAQM,KAAK,MAAjC,kCACC7F,EAAQ,sBAAMK,QAAS,WAVhCkB,ERhBG,CACHhC,KAAM,aQgBNgC,EAAS7B,EAAgB,aACzB6F,EAAQM,KAAK,UACb/D,aAAamG,WAAW,cAOP,kBAAoD,Y,oBCgC9DC,I,MAnDS,SAAC,GAAa,IAAZrD,EAAW,EAAXA,MACtB,EAAyB9E,mBAAS,CAACc,MAAM,GAAGC,YAAY,KAAxD,mBAAOd,EAAP,KAAaC,EAAb,KACMjC,EAAOsD,aAAY,SAAAtB,GAAK,OAAIA,EAAMhC,QAClCuD,EAAWC,cAEX2G,EAAc,WAChB5G,ETAG,CACHhC,KAAM,iBSEJ6C,EAAe,SAACV,GAClBzB,EAAS,2BAAID,GAAL,kBAAY0B,EAAEW,OAAOrD,GAAK0C,EAAEW,OAAOrB,UAGzCS,EAAY,uCAAG,WAAOC,GAAP,eAAAvD,EAAA,6DACjBuD,EAAEC,iBADe,SAGC5D,EAAWC,EAAKgC,EAAM8B,aAAaC,QAAQ,cAH5C,YAKOE,KAFlBD,EAHW,QAKV1D,KAAKL,SACR4G,EAAMjB,aAAa5B,EAAI1D,KAAKL,SAC5BkK,IACA5G,EAAS7B,EAAgB,yBAEzB6B,EAAS7B,EAAgB,sBAVZ,2CAAH,sDAelB,OACI,sBAAKS,UAAU,sBAAf,UACI,cAAC,KAAD,CAAWE,QAAS,WAAO8H,KAAgB7H,MAAO,CAACE,SAAU,IAAKL,UAAU,cAC5E,sBAAM0C,SAAUpB,EAActB,UAAU,yBAAxC,SACI,sBAAKA,UAAU,8BAAf,UACI,6CACA,sBAAKA,UAAU,mCAAf,UACI,0CACA,uBAAO2C,SAAU,SAACpB,GAAOU,EAAaV,IAAK1C,GAAG,QAAQO,KAAK,OAAOwD,UAAQ,OAE9E,sBAAK5C,UAAU,mCAAf,UACI,6CACA,uBAAO2C,SAAU,SAACpB,GAAOU,EAAaV,IAAK1C,GAAG,cAAcO,KAAK,OAAOwD,UAAQ,OAEpF,qBAAK5C,UAAU,oCAAf,SACI,wBAAQZ,KAAK,SAAb,+BC6GT6I,I,MAxJc,SAAC,GAAa,IAAZvD,EAAW,EAAXA,MAC3B,EAA0B9E,mBAAS,CAACf,GAAG6F,EAAMnB,KAAK1E,GAAGoB,OAAOyE,EAAMnB,KAAKtD,OAAO2D,UAAUc,EAAMnB,KAAKK,UAAUC,WAAWa,EAAMnB,KAAKM,WAAWF,KAAKe,EAAMnB,KAAKI,KAAKG,MAAMY,EAAMnB,KAAKO,QAApL,mBAAOjE,EAAP,KAAcC,EAAd,KACA,EAAuBF,mBAAS,IAAhC,mBAAOmB,EAAP,KAAYG,EAAZ,KACMrD,EAAOsD,aAAY,SAAAtB,GAAK,OAAIA,EAAMhC,QAClCuD,EAAWC,cAgBXY,EAAe,SAACV,GAClBzB,EAAS,2BAAID,GAAL,kBAAa0B,EAAEW,OAAOrD,GAAK0C,EAAEW,OAAOrB,UAwB1ClB,EAAkB,SAACE,IACZ,uCAAG,sBAAA7B,EAAA,sEACKiB,EAAUpB,EAAKS,MAAMuB,EAAMhB,GAAG8C,aAAaC,QAAQ,cADxD,mFAAH,qDAITC,GAAMqG,MAAK,SAAC/J,GACR,IACyB,OAAlBA,EAAKA,KAAKuB,KAETwB,EAAQH,EAAKiB,QAAO,SAACtC,GAAD,OAASA,EAAIb,IAAMV,EAAKA,KAAKuB,IAAIb,OAE3D,SACEuC,EAAS7B,EAAgB,sBAM/B+B,EAAY,uCAAG,WAAOC,GAAP,eAAAvD,EAAA,6DACjBuD,EAAEC,iBADe,SAGCtC,EAAkB,CAACf,KAAK,CACtCuD,YAAa7B,EACbhC,KAAMA,EACNE,MAAO4D,aAAaC,QAAQ,gBANf,OAGXC,EAHW,OASjB,IAC4B,8BAArBA,EAAI1D,KAAKmH,SACRZ,EAAMjB,aAAa5D,GACnBuB,EAAS7B,EAAgB,6BACzB6B,EVtEL,CACHhC,KAAM,iBUuEEgC,EAAS7B,EAAgB,2BAG/B,SACE6B,EAAS7B,EAAgB,iBAnBZ,2CAAH,sDA+BlB,OALAQ,qBAAU,WACNmB,EAAQwD,EAAMnB,KAAKxC,QAEpB,IAGC,sBAAKf,UAAU,2BAAf,UACI,cAAC,KAAD,CAAWE,QAAS,WAvExBkB,EVnBG,CACHhC,KAAM,iBUyFyCe,MAAO,CAACE,SAAU,IAAKL,UAAU,cAC5E,sBAAM0C,SAAUpB,EAActB,UAAU,8BAAxC,SACI,sBAAKA,UAAU,mCAAf,UACI,4DAAyB0E,EAAMnB,KAAK1E,MACpC,sBAAKmB,UAAU,kCAAf,UACI,sBAAKA,UAAU,sCAAf,UACI,2CACA,uBAAO2C,SAAU,SAACpB,GAAOU,EAAaV,IAAK4G,aAAczD,EAAMnB,KAAKtD,OAAQpB,GAAG,SAASO,KAAK,OAAOwD,UAAQ,OAEhH,sBAAK5C,UAAU,sCAAf,UACI,oDACA,uBAAO2C,SAAU,SAACpB,GAAOU,EAAaV,IAAK4G,aAAczD,EAAMnB,KAAKK,UAAW/E,GAAG,YAAYO,KAAK,OAAOwD,UAAQ,UAG1H,qBAAK5C,UAAU,kCAAf,SACI,sBAAKA,UAAU,qBAAf,UACKe,EAAK8B,KAAI,SAACnD,GACP,OAAO,cAAC,EAAD,CAAKC,gBAAiBA,EAAiBD,IAAKA,GAAUA,EAAIb,OAErE,uBAAOiE,YAAY,aAAaC,UAAW,SAACxB,IAvFjD,SAACA,GACH,QAAVA,EAAEyB,KAA2B,UAAVzB,EAAEyB,MACpBzB,EAAEC,iBACqB,KAAnBD,EAAEW,OAAOrB,QACA,uCAAG,sBAAA7C,EAAA,sEACKgB,EAAO,CAACb,KAAK,CAACuB,IAAI,CAACO,OAAOsB,EAAEW,OAAOrB,MAAMoC,eAAepF,KAAKA,EAAK6D,YAAYgD,EAAMnB,KAAKxF,MAAM4D,aAAaC,QAAQ,gBADzH,mFAAH,oDAITC,GAAMqG,MAAK,SAAC/J,GACR+C,EAAQ,GAAD,mBAAKH,GAAL,CAAU5C,EAAKA,KAAKuB,UAG/B6B,EAAEW,OAAOrB,MAAQ,KA2E8CqC,CAAW3B,IAAKvB,UAAU,8BAGrF,sBAAKA,UAAU,kCAAf,UACI,sBAAKA,UAAU,sCAAf,UACI,+CACA,yBAAQ2C,SAAU,SAACpB,GAAOU,EAAaV,IAAK4G,aAAczD,EAAMnB,KAAKM,WAAYhF,GAAG,aAAasE,KAAK,WAAtG,UACI,wBAAQtC,MAAM,SAAd,oBACA,wBAAQA,MAAM,aAAd,8BAGR,sBAAKb,UAAU,sCAAf,UACI,yCACA,yBAAQ2C,SAAU,SAACpB,GAAOU,EAAaV,IAAK4G,aAAczD,EAAMnB,KAAKI,KAAM9E,GAAG,OAAOsE,KAAK,OAA1F,UACI,wBAAQtC,MAAM,UAAd,qBACA,wBAAQA,MAAM,QAAd,yBAGR,sBAAKb,UAAU,sCAAf,UACI,0CACA,uBAAO2C,SAAU,SAACpB,GAAOU,EAAaV,IAAK4G,aAAczD,EAAMnB,KAAKO,MAAOjF,GAAG,QAAQuE,IAAK,EAAGC,KAAK,OAAOjE,KAAK,SAASwD,UAAQ,OAEpI,sBAAK5C,UAAU,sCAAf,UACI,yCACA,uBAAO2C,SAAU,aAAUxC,MAAO,CAACC,OAAQ,eAAgBF,QAAS,SAACqB,GAAOA,EAAEC,kBAAmBX,MArItG,SAACC,GAChB,IAAIiD,EAAI,IAAI3B,KAAKtB,GACbkD,EAAQ,IAAMD,EAAEE,WAAa,GAC7BC,EAAM,GAAKH,EAAEI,UACbC,EAAOL,EAAEM,cAOb,OALIL,EAAMM,OAAS,IACfN,EAAQ,IAAMA,GACdE,EAAII,OAAS,IACbJ,EAAM,IAAMA,GAET,CAACE,EAAMJ,EAAOE,GAAKK,KAAK,KA0H6FC,CAAWE,EAAMnB,KAAKkB,aAAc5F,GAAG,OAAOO,KAAK,OAAOwD,UAAQ,OAE9K,sBAAK5C,UAAU,sCAAf,UACI,yBACA,wBAAQA,UAAU,kCAAlB,uCCxIboI,I,MAVD,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UACNxI,EAAQ,CAACyI,SAAU,cAAC,GAAD,CAAiB5D,MAAO2D,EAAU3D,QAAS6D,UAAW,cAAC,GAAD,CAAsB7D,MAAO2D,EAAU3D,SAEtH,OACI,mCACC7E,EAAMwI,EAAUxJ,Q,oBCgBV2J,I,MAnBM,SAAC,GAAgB,IAAf9D,EAAc,EAAdA,MAAM7F,EAAQ,EAARA,GACnBuC,EAAWC,cAEX2G,EAAc,WAClB5G,EZsB4B,SAACvC,GAC/B,MAAO,CACHO,KAAM,sBACNC,QAASR,GYzBF4J,CAAmB,CAAC5J,GAAGA,MAGlC,OACE,sBAAKqB,QAAS8H,EAAaU,eAAgBV,EAAahI,UAAS,2BAAsB0E,EAAMiE,QAA7F,UACE,cAAC,KAAD,CAAWxI,MAAO,CAACE,SAAU,MAC7B,sBAAKL,UAAU,0BAAf,UACE,iCAAS0E,EAAMhE,QACf,+BAAOgE,EAAM/D,iBAEf,sBAAMX,UAAU,gC,SCGT4I,GApBQ,SAAC,GAAqC,IAAzBC,EAAwB,EAAnCR,UAAyBS,EAAU,8BAClDjB,EAAW1G,aAAY,SAAAtB,GAAK,OAAIA,EAAMhC,QAC5C,EAAyB+B,oBAAS,GAAlC,mBAAOC,EAAP,KAAaC,EAAb,KAOA,OALAC,qBAAU,WACND,EAAS+H,KAEX,KAEW,IAAVhI,EACQ,6BAIP,cAAC,IAAD,2BAAWiJ,GAAX,IAAiBC,OAAQ,SAAArE,GAAK,OAC1B7E,EAAQ,cAACgJ,EAAD,eAAenE,IAAY,cAAC,IAAD,CAAUyC,GAAI,CAACC,SAAU,SAAUvH,MAAO,CAACmJ,KAAMF,EAAKE,c,MC2DtFC,OAhEf,WACE,IAAMC,EAAW/H,aAAY,SAAAtB,GAAK,OAAIA,EAAM3B,QACtC2J,EAAW1G,aAAY,SAAAtB,GAAK,OAAIA,EAAMhC,QACtCsL,EAAmBhI,aAAY,SAAAtB,GAAK,OAAIA,EAAMuJ,iBACpD,EAAyBxJ,oBAAS,GAAlC,mBAAOC,EAAP,KAAaC,EAAb,KACMsB,EAAWC,cAgCjB,OA9BAtB,qBAAU,WAER,IAAMsJ,EAAM,uCAAG,sBAAArL,EAAA,sEACA+H,EAAe,CAAC5H,KAAK,CAACJ,MAAM4D,aAAaC,QAAQ,gBADjD,mFAAH,sDAID,uCAAG,sBAAA5D,EAAA,yDAC6B,OAAtC2D,aAAaC,QAAQ,aADZ,yCAGFyH,IAASnB,MAAK,SAACrG,GACK,sBAArBA,EAAI1D,KAAKmH,QACVlE,EAASjC,EAAO0C,EAAI1D,KAAKN,OAEzB8D,aAAamG,WAAW,gBAPpB,6DAeZhI,EAAS+H,GAfG,wDAAH,qDAkBXyB,KAIA,KAEY,IAAVzJ,EACK,6BAMP,sBAAKG,UAAU,MAAf,UACE,qBAAKA,UAAU,mBAAf,SACGmJ,EAAiBtG,KAAI,SAACU,GACrB,OAAO,cAAC,GAAD,CAA4B1E,GAAI0E,EAAK1E,GAAI6F,MAAOnB,EAAKmB,OAAlCnB,EAAK1E,SAInC,eAAC,IAAD,WACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,GAAD,CAAgBmK,KAAK,aAAaO,OAAK,EAAClB,UAAWlD,IACnD,cAAC,GAAD,CAAgB6D,KAAK,IAAIO,OAAK,EAAClB,UAAWd,KAC1C,cAAC,IAAD,CAAOyB,KAAK,SAASO,OAAK,EAAClB,UAAWlC,UAGzC+C,EAAW,cAAC,GAAD,CAAOb,UAAWa,IAAe,S,kBChEpCM,GANKC,aAAgB,CAChC5L,KCDgB,WAA2B,IAA1BgC,EAAyB,uDAAjB,KAAM6J,EAAW,uCAC1C,OAAQA,EAAOtK,MACX,IAAK,WACD,OAAO,KACX,IAAK,UACD,OAAOsK,EAAOrK,QAClB,QACI,OAAOQ,IDLf3B,KCSmB,WAA2B,IAA1B2B,EAAyB,uDAAjB,KAAM6J,EAAW,uCAC7C,OAAQA,EAAOtK,MACX,IAAK,WACD,OAAOsK,EAAOrK,QAClB,IAAK,cACD,OAAO,KACX,QACI,OAAOQ,IDffuJ,cCmB2B,WAAyB,IAAxBvJ,EAAuB,uDAAf,GAAI6J,EAAW,uCACnD,OAAQA,EAAOtK,MACX,IAAK,mBACD,MAAM,GAAN,mBAAWS,GAAX,CAAiB,CAAC6E,MAAMiF,GAAMD,EAAOrK,SAASR,GAAGqG,iBACrD,IAAK,sBACD,OAAOrF,EAAMmC,QAAO,SAACuB,GAAD,OAAUA,EAAK1E,KAAO6K,EAAOrK,QAAQR,MAC7D,QACI,OAAOgB,MCxBb+J,GAAUC,aACZC,GACArD,OAAOsD,8BAAgCtD,OAAOsD,gCAGlDC,IAASjB,OACL,cAAC,IAAD,CAAUkB,MAAOL,GAAjB,SACI,cAAC,GAAD,MAEHM,SAASC,eAAe,W","file":"static/js/main.17747374.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst url = \"http://192.168.0.30:3100\"\n\nconst newAccount = async (user,account,token) => {\n    try {\n        const result = await axios.post(`${url}/user/new-account`, {\n            data: {\n                user: user,\n                account: account,\n                token: token\n            }\n        })\n        return result\n    } catch {\n        return null\n    }\n    \n}\n\nconst getAccounts = async (email,token) => {\n    try {\n        const result = await axios.get(`${url}/user/get-accounts`, {params: {\n            email: email,\n            token: token\n        }})\n        return result\n    } catch {\n        return null\n    }\n    \n}\n\nconst newTransaction = async (data) => {\n    try {\n        const result = await axios.post(`${url}/user/new-transaction`, data)\n        return result\n    } catch {\n        return null\n    }\n    \n}\n\nconst getTransactions = async (email,account_id,token) => {\n    try {\n        const result = await axios.get(`${url}/user/get-transactions`, {params: {\n            account_id: account_id,\n            email: email,\n            token: token\n        }})\n        return result\n    } catch {\n        return null\n    }\n    \n}\n\nconst deleteTransaction = async(email,id,token) => {\n    try {\n        const result = await axios.delete(`${url}/user/delete-transaction`, {params: {\n            id: id,\n            email: email,\n            token: token\n        }})\n        return result\n    } catch {\n        return null\n    }\n    \n}\n\nconst deleteAccount = async(email,id,token) => {\n    try {\n        const result = await axios.delete(`${url}/user/delete-account`, {params: {\n            id: id,\n            email: email,\n            token: token\n        }})\n        return result\n    } catch {\n        return null\n    }\n    \n}\n\nconst newTag = async(data) => {\n    try {\n        const result = await axios.post(`${url}/user/new-tag`, data)\n        return result\n    } catch {\n        return null\n    }\n}\n\nconst deleteTag = async(email,id,token) => {\n    try {\n        const result = await axios.delete(`${url}/user/delete-tag`, {params: {\n            id: id,\n            email: email,\n            token: token\n        }})\n        return result\n    } catch {\n        return null\n    }\n}\n\nconst updateTransaction = async(data) => {\n    try {\n        const result = await axios.post(`${url}/user/update-transaction`, data)\n        return result\n    } catch {\n        return null\n    }\n}\n\n\nexport {newAccount,getAccounts,newTransaction,getTransactions,deleteTransaction,deleteAccount,newTag,deleteTag,updateTransaction}\n","export const signOut = () => {\n    return {\n        type: 'SIGN_OUT'\n    }\n}\n\nexport const signIn = (user) => {\n    return {\n        type: 'SIGN_IN',\n        payload: user\n    }\n}\n\nexport const removePost = () => {\n    return {\n        type: 'REMOVE_POST'\n    }\n}\n\nexport const putPost = (post) => {\n    return {\n        type: 'PUT_POST',\n        payload: post\n    }\n}\n\nexport const putNotification = (notification) => {\n    return {\n        type: 'PUT_NOTIFICATION',\n        payload: notification\n    }\n}\n\nexport const removeNotification = (id) => {\n    return {\n        type: 'REMOVE_NOTIFICATION',\n        payload: id\n    }\n}","import React,{useState,useEffect} from 'react';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\n\nimport './Tag.css'\n\nconst Tag = ({tag,handleRemoveTag}) => {\n    const [state,setState] = useState(null)\n\n    useEffect(() => {\n        setState(tag)\n        // eslint-disable-next-line\n    },[])\n\n    return (\n        <>\n        <div className=\"mainTag\">\n            <span>{tag.titulo}</span>\n            <HighlightOffIcon onClick={() => {handleRemoveTag(state)}} className=\"tagIcon\" style={{cursor: \"pointer\",fontSize: 15, color: \"#000\"}}/>\n        </div>\n        </>\n    )\n}\n\nexport default Tag;\n","import React, { useState } from 'react';\nimport { useSelector,useDispatch } from 'react-redux';\nimport {putNotification} from '../../actions'\nimport {newTransaction} from '../../utils/api/db'\nimport Tag from '../Tag/Tag'\nimport './NewItem.css'\n\nconst NewItem = ({handleNewItem,accountId}) => {\n    const [newItem, setNewItem] = useState({id:0,title:\"\",description:\"\",model:\"Manual\",type:\"Entrada\",value:0,date:null,tags:[]})\n    const [tags,setTags] = useState([])\n    const user = useSelector(state => state.user)\n    const dispatch = useDispatch()\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n        var objNewItem = newItem\n        objNewItem.tags = tags\n\n        const res = await newTransaction({data:{\n            account: {\n                id: accountId\n            },\n            transaction: objNewItem,\n            user: user,\n            token: localStorage.getItem(\"authToken\")\n        }})\n\n        try {\n            if(res.data.account !== undefined) {\n                dispatch(putNotification(\"NEW_TRANSACTION_SUCCESS\"))\n                handleNewItem(res.data.account)\n            } else {\n                dispatch(putNotification(\"NEW_TRANSACTION_ERROR\"))\n            }\n        } catch {\n            dispatch(putNotification(\"SERVER_ERROR\"))\n\n        }\n        \n\n    }\n\n    const handleTags = (e) => {\n        if(e.key === \"Tab\" || e.key === \"Enter\") {\n            e.preventDefault()\n            if (e.target.value !== \"\") {\n                setTags([...tags,{titulo:e.target.value.toLowerCase()}])\n                e.target.value = \"\"\n            }\n        }\n    }\n\n    const handleRemoveTag = (nome) => {\n        setTags(tags.filter((tag) => tag !== nome))\n    }\n\n    const handleChange = (e) => {\n        if(e.target.id === \"data\") {\n            var utcDate = new Date(e.target.value).toISOString().slice(0, 19).replace('T', ' ')\n            setNewItem({...newItem, [e.target.id]: new Date(utcDate.getTime() + utcDate.getTimezoneOffset() * 60000)})\n        } else {\n            setNewItem({...newItem, [e.target.id]: e.target.value})\n        }\n    }\n\n    return (\n        <div className=\"mainNewItem\">\n            <span>Nova transação:</span>\n            <form onSubmit={handleSubmit}>\n                <div className=\"mainNewItemContents\">\n                    <div className=\"mainNewItemSection\">\n                        <div className=\"mainNewItemSectionItem\">\n                            <span>Titulo:</span>\n                            <input id=\"title\" onChange={handleChange} type=\"text\" required></input>\n                        </div>\n                        <div className=\"mainNewItemSectionItem\">\n                            <span>Descrição:</span>\n                            <input id=\"description\" onChange={handleChange} type=\"text\" required></input>\n                        </div>\n                    </div>\n                    <div className=\"mainNewItemSection\">\n                        <div className=\"mainNewItemsTagDiv\">\n                            {tags.map((tag) => {\n                                return <Tag handleRemoveTag={handleRemoveTag} tag={tag} key={tag.id} />\n                            })}\n                            <input placeholder=\"Ex: comida\" onKeyDown={(e) => {handleTags(e)}} className=\"mainNewItemsTagInput\"></input>\n                        </div>\n                    </div>\n                    <div className=\"mainNewItemSection\">\n                        <div className=\"mainNewItemSectionItem\">\n                            <span>Modalidade:</span>\n                            <select id=\"model\" onChange={handleChange} name=\"modalide\">\n                                <option value=\"Manual\">Manual</option>\n                                <option value=\"Recorrente\">Recorrente</option>\n                            </select>\n                        </div>\n                        <div className=\"mainNewItemSectionItem\">\n                            <span>Tipo:</span>\n                            <select id=\"type\" onChange={handleChange} name=\"tipo\">\n                                <option value=\"Entrada\">Entrada</option>\n                                <option value=\"Saida\">Saida</option>\n                            </select>\n                        </div>\n                        <div className=\"mainNewItemSectionItem\">\n                            <span>Valor:</span>\n                            <input id=\"value\" onChange={handleChange} min={0} step=\"0.01\" type=\"number\" required></input>\n                        </div>\n                        <div className=\"mainNewItemSectionItem\">\n                            <span>Data:</span>\n                            <input id=\"date\" onChange={handleChange} type=\"date\" required></input>\n                        </div>\n                        <div className=\"mainNewItemSectionItem\">\n                            <span></span>\n                            <button type=\"submit\" className=\"mainNewItemSectionItemConfirm\">Confirmar</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default NewItem;\n","import React, {useEffect,useState} from 'react';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {putPost} from '../../actions'\nimport {useDispatch} from 'react-redux'\nimport {randomstring} from 'randomstring-js'\nimport './ItemsTable.css'\n\nconst Item = ({item, setItems, handleUpdate, handleDelete}) => {\n    const dispatch = useDispatch()\n\n    const formatDate = (date) => {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n    \n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n    \n        return [day, month, year].join('-');\n    }\n\n    const handleModal = () => {\n        dispatch(putPost({id:\"EDIT_TRAN\",props:{\n            item: item,\n            setItems: setItems,\n            handleUpdate: handleUpdate\n        }}))\n    }\n\n    return (\n        <tr className={item.tipo}>\n            <td>{item.id}</td>\n            <td>{item.titulo}</td>\n            <td>{item.descricao}</td>\n            <td>{item.modalidade}</td>\n            <td>{item.tipo}</td>\n            <td>R${item.valor}</td>\n            <td>{formatDate(item.dataMomento)}</td>\n            <td><EditIcon onClick={() => {handleModal()}} className=\"cursor\"/><DeleteIcon onClick={() => {handleDelete(item.id)}} className=\"cursor\"/></td>\n        </tr>\n    )\n}\n\nconst ItemsTable = ({items,handleDelete,handleUpdate}) => {\n    const [allItems,setAllItems] = useState([])\n\n    useEffect(() => {\n        items.map((item,index) => {\n            var res = new Date(item.dataMomento)\n            return items[index].dataMomento = res\n        })\n        setAllItems(items.sort((a,b) => b.dataMomento - a.dataMomento))\n    },[items])\n\n    return (\n        <div className=\"mainItemsTable\">\n            <div className=\"mainItemsTableContents\">\n                <table>\n                    <tbody>\n                        <tr key={randomstring()}>\n                            <th>Numero</th>\n                            <th>Titulo</th>\n                            <th>Descrição</th>\n                            <th>Modalidade</th>\n                            <th>Tipo</th>\n                            <th>Valor</th>\n                            <th>Data</th>\n                            <th>Edição</th>\n                        </tr>\n                        {allItems.map((item) => {\n                            return (\n                                <Item item={item} items={items} handleUpdate={handleUpdate} handleDelete={handleDelete} key={randomstring()}/>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nexport default ItemsTable;\n","import React, { useState,useEffect } from 'react';\nimport {useHistory} from 'react-router-dom'\nimport {getTransactions,deleteTransaction} from '../../utils/api/db'\nimport NewItem from '../../components/NewItem/NewItem'\nimport {useSelector,useDispatch} from 'react-redux'\nimport ItemsTable from '../../components/ItemsTable/ItemsTable'\nimport './Dashboard.css'\nimport { putNotification } from '../../actions';\n\nconst Dashboard = (props) => {\n    const user = useSelector(state => state.user)\n    const [items, setItems] = useState([])\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    const handleNewItem = (newItem) => {\n        setItems([...items,newItem])\n    }\n\n    const handleUpdate = (state) => {\n        setItems(items.map((item) => {\n            if(item.id !== state.id) return item\n            for(let [key] of Object.entries(state)) {\n                item[key] = state[key]\n            }\n            return item\n        }))\n    }\n\n    const handleDelete = async (id) => {\n        const res = await deleteTransaction(user.email,id,localStorage.getItem(\"authToken\"))\n        \n        try {\n            if(res.data.message === \"Delete feito com sucesso!\") {\n                dispatch(putNotification(\"DELETE_TRANSACTION_SUCCESS\"))\n                setItems(items.filter(item => item.id !== id))\n            } else {\n                dispatch(putNotification(\"DELETE_TRANSACTION_ERROR\"))\n                \n            }\n        } catch {\n            dispatch(putNotification(\"SERVER_ERROR\"))\n\n        }\n        \n    }\n\n    useEffect(() => {\n\n        const getTransacoes = async () => {\n            const res = await getTransactions(user.email, props.location.state.id,localStorage.getItem(\"authToken\"))\n            if(res) {\n                setItems(res.data.transactions)\n            }\n        }\n        \n        if(props.location.state === undefined) {\n            history.push(\"/\")\n        } else {\n            getTransacoes()\n        }\n    // eslint-disable-next-line\n    },[])\n\n    if(props.location.state === undefined) {\n        return <></>\n    }\n\n    return (\n        <div className=\"mainDashboard\">\n            <div className=\"mainDashboardContents\">\n                <h1>Conta: {props.location.state.nome}</h1>\n                <small>Descrição: {props.location.state.descricao}</small>\n                <NewItem accountId={props.location.state.id} handleNewItem={handleNewItem}/>\n                <ItemsTable handleUpdate={handleUpdate} handleDelete={handleDelete} items={items}/>\n            </div>\n        </div>\n    );\n}\n\nexport default Dashboard;\n","import axios from 'axios'\n\nconst url = \"http://192.168.0.30:3100\"\n\nconst loginAPI = async (data) => {\n    try{\n        const result = await axios.post(`${url}/user/login`, data)\n        return result\n    } catch (e){\n        return e\n    }\n}\n\nconst registerAPI = async (data) => {\n    try {\n        const result = await axios.post(`${url}/user/register`, data)\n        return result\n    } catch {\n        return null\n    }\n}\n\nconst verifyTokenAPI = async (data) => {\n    try{\n        const result = await axios.post(`${url}/user/verify`, data)\n    return result\n    } catch {\n        return null\n    }\n}\n\nexport {loginAPI,registerAPI,verifyTokenAPI}\n","import React, {useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport {loginAPI,registerAPI} from '../../utils/api/auth'\nimport {useDispatch} from 'react-redux'\nimport {signIn,putNotification} from '../../actions'\nimport './Login.css'\n\nconst LoginDiv = ({handleChange,changeScreen}) => {\n    return (\n        <>\n        <h3>Entre na sua conta</h3>\n        <div className=\"formLoginDiv\">\n            <div className=\"formLoginDivInput\">\n                <span>email</span>\n                <input id=\"email\" onChange={handleChange} type=\"text\" required></input>\n            </div>\n            <div className=\"formLoginDivInput\">\n                <span>Senha</span>\n                <input id=\"senha\" onChange={handleChange} type=\"password\" required></input>\n            </div>\n            <div className=\"formLoginDivForgot\">\n                <small></small>\n                <small onClick={() => {changeScreen(false)}}>Criar uma conta!</small>\n            </div>\n            <div className=\"formLoginDivButton\">\n                <button type=\"submit\">Log in</button>\n            </div>\n        </div>\n        </>\n    )\n}\n\nconst RegisterDiv = ({handleChange,changeScreen}) => {\n    return (\n        <>\n        <h3>Crie uma conta</h3>\n        <div className=\"formLoginDiv\">\n            <div className=\"formLoginDivInput\">\n                <span>Nome completo</span>\n                <input id=\"nome\" onChange={handleChange} type=\"text\" required></input>\n            </div>\n            <div className=\"formLoginDivInput\">\n                <span>Email</span>\n                <input id=\"email\" onChange={handleChange} type=\"email\" required></input>\n            </div>\n            <div className=\"formLoginDivInput\">\n                <span>Senha</span>\n                <input id=\"senha\" onChange={handleChange} type=\"password\" required></input>\n            </div>\n            <div className=\"formLoginDivInput\">\n                <span>Confirme a senha</span>\n                <input id=\"senhaDenovo\" onChange={handleChange} type=\"password\" required></input>\n            </div>\n            <div className=\"formLoginDivForgot\">\n                <small></small>\n                <small onClick={() => {changeScreen(true)}}>Faca login!</small>\n            </div>\n            <div className=\"formLoginDivButton\">\n                <button type=\"submit\">Register</button>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default function Login(){\n    const [state,setState] = useState(true)\n    const [dados,setDados] = useState({email:\"\",senha:\"\",senhaDenovo:\"\",nome:\"\"})\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        var res\n\n        if(state) {\n            res = await loginAPI({\"data\":{\"email\": dados.email,\"senha\": dados.senha}})\n        } else {\n            res = await registerAPI({\"data\":{\"nome\":dados.nome,\"email\":dados.email,\"senha\":dados.senha}})\n        }\n        \n        try {\n            if(res.data.token) {\n                dispatch(signIn(res.data.user))\n                dispatch(putNotification(\"LOGIN_SUCCESS\"))\n                localStorage.setItem(\"authToken\", res.data.token)\n                history.push(\"/\")\n            } else {\n                dispatch(putNotification(\"LOGIN_ERROR\"))\n\n            }\n        } catch (e){\n            window.alert(res)\n            dispatch(putNotification(\"SERVER_ERROR\"))\n            \n        }\n        \n    }\n\n    const handleChange = (e) => {\n        setDados({...dados, [e.target.id]: e.target.value})\n    }\n\n    return(\n        <>\n        <div className=\"mainLogin\">\n            <form onSubmit={handleSubmit} className=\"formLogin\">\n                {state ? <LoginDiv handleChange={handleChange} changeScreen={setState}/> : <RegisterDiv handleChange={handleChange} changeScreen={setState}/>}\n            </form>\n        </div>\n        </>\n    )\n}","import React,{useState,useEffect} from 'react';\nimport AddIcon from '@material-ui/icons/Add';\nimport {useDispatch,useSelector} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {putNotification, putPost} from '../../actions'\nimport {getAccounts,deleteAccount} from '../../utils/api/db'\nimport { useRef } from 'react';\nimport './Home.css'\n\nconst Account = ({conta,handleDelete}) => {\n    const div = useRef(null)\n\n    const handleChange = (e) => {\n        e.preventDefault()\n        if(!div.current.style.transform) {\n            div.current.style.transform = \"translateY(-35px)\"\n        } else {\n            div.current.style = \"\"\n        }\n        try {\n            setTimeout(() => {\n                if(div.current !== null) div.current.style = \"\"\n            },5000)\n        } catch {\n            \n        }\n    }\n\n    return (\n        <div onContextMenu={(e) => {handleChange(e)}} className=\"mainHomeContentsItems\">\n            <div className=\"mainHomeContentsBoxButton\">\n                <button onClick={() => {handleDelete(conta.id)}}>Deletar</button>\n            </div>\n            <Link style={{color:\"#000\"}} to={{pathname:\"/dashboard\",state:conta}}>\n                <div ref={div} className=\"mainHomeContentsBox\">\n                    <h4>{conta.nome}</h4>\n                    <small>{conta.descricao}</small>\n                    <span>{conta.id}</span>\n                </div>\n            </Link>\n        </div>\n    )\n}\n\nconst NewAccount = ({handleUpdate}) => {\n    const dispatch = useDispatch()\n\n    return (\n        <div onClick={() => {\n            dispatch(putPost({id: \"NEW_POST\", props:{\n                handleUpdate: handleUpdate\n            }}))\n        }} className=\"mainHomeContentsItems\">\n            <div className=\"mainHomeContentsBox\">\n                <AddIcon style={{fontSize: 45}}/>\n                <h4>Nova conta</h4>\n            </div>\n        </div>\n    )\n}\n\n\nconst Home = () => {\n    const [contas,setContas] = useState([])\n    const user = useSelector(state => state.user)\n    const dispatch = useDispatch()\n\n    const handleDelete = async (id) => {\n        const res = await deleteAccount(user.email,id,localStorage.getItem(\"authToken\"))\n\n        try {\n            if(res.data.message === \"Delete feito com sucesso!\") {\n                dispatch(putNotification(\"DELETE_ACCOUNT_SUCCESS\"))\n                setContas(contas.filter(item => item.id !== id))\n            } else {\n                dispatch(putNotification(\"DELETE_ACCOUNT_ERROR\"))\n            }\n        } catch {\n            dispatch(putNotification(\"SERVER_ERROR\"))\n            \n        }\n        \n    }\n\n    const getAccountsFromAPI = async () => {\n        const res = await getAccounts(user.email,localStorage.getItem(\"authToken\"))\n        try {\n            setContas(res.data.accounts)\n        } catch {\n            dispatch(putNotification(\"SERVER_ERROR\"))\n        }\n    }\n\n    const handleUpdate = (account) => {\n        setContas([...contas,account])\n    }\n\n    useEffect(() => {\n        getAccountsFromAPI()\n        // eslint-disable-next-line\n    },[])\n\n    return (\n        <div className=\"mainHome\">\n            <div className=\"mainHomeContents\">\n                <h3>Suas contas:</h3>\n                <div className=\"mainHomeContentsItemsBox\">\n                    {contas.map((conta,index) => {\n                        return <Account handleDelete={handleDelete} key={index} conta={conta}/>\n                    })}\n                    <NewAccount handleUpdate={handleUpdate}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home;\n","import React, { useState,useEffect } from 'react';\nimport {useHistory} from 'react-router-dom'\nimport {useDispatch,useSelector} from 'react-redux'\nimport {signOut,putNotification} from '../../actions'\nimport './Navbar.css'\n\nconst Navbar = () => {\n    const isLogged = useSelector(state => state.user)\n    const [state,setState] = useState(null)\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    useEffect(() => {\n        setState(isLogged)\n    },[isLogged])\n\n    const handleLogin = () => {\n        dispatch(signOut())\n        dispatch(putNotification(\"SIGN_OUT\"))\n        history.push(\"/login\")\n        localStorage.removeItem(\"authToken\")\n    }\n\n    return (\n        <div className=\"mainNavbar\">\n            <div className=\"mainNavbarContents\">\n                <h2 onClick={() => {history.push(\"/\")}}>Gerenciador de caixa</h2>\n                {state ? <span onClick={() => {handleLogin()}}>Sair</span> : null}\n            </div>\n        </div>\n    );\n}\n\nexport default Navbar;\n","import React,{useState} from 'react';\nimport {removePost,putNotification} from '../../../actions'\nimport {useDispatch} from 'react-redux'\nimport {newAccount} from '../../../utils/api/db'\nimport {useSelector} from 'react-redux'\nimport CloseIcon from '@material-ui/icons/Close';\nimport './ModalNewAccount.css'\n\nconst ModalNewAccount = ({props}) => {\n    const [state,setState] = useState({title:\"\",description:\"\"})\n    const user = useSelector(state => state.user)\n    const dispatch = useDispatch()\n\n    const handleClose = () => {\n        dispatch(removePost())\n    }\n\n    const handleChange = (e) => {\n        setState({...state,[e.target.id]: e.target.value})\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n        const res = await newAccount(user,state,localStorage.getItem(\"authToken\"))\n\n        if(res.data.account !== undefined) {\n            props.handleUpdate(res.data.account)\n            handleClose()\n            dispatch(putNotification(\"NEW_ACCOUNT_SUCCESS\"))\n        } else {\n            dispatch(putNotification(\"NEW_ACCOUNT_ERROR\"))\n        }\n\n    }\n\n    return (\n        <div className=\"mainModalNewAccount\">\n            <CloseIcon onClick={() => {handleClose()}} style={{fontSize: 50}} className=\"closeIcon\"/>\n            <form onSubmit={handleSubmit} className=\"mainModalNewAccountBox\">\n                <div className=\"mainModalNewAccountContents\">\n                    <h2>Nova conta:</h2>\n                    <div className=\"mainModalNewAccountContentsInput\">\n                        <span>Titulo</span>\n                        <input onChange={(e) => {handleChange(e)}} id=\"title\" type=\"text\" required></input>\n                    </div>\n                    <div className=\"mainModalNewAccountContentsInput\">\n                        <span>Descricao</span>\n                        <input onChange={(e) => {handleChange(e)}} id=\"description\" type=\"text\" required></input>\n                    </div>\n                    <div className=\"mainModalNewAccountContentsButton\">\n                        <button type=\"submit\">Criar</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default ModalNewAccount\n","import React,{useState,useEffect} from 'react';\nimport {useDispatch,useSelector} from 'react-redux'\nimport {removePost,putNotification} from '../../../actions'\nimport {newTag,deleteTag,updateTransaction} from '../../../utils/api/db'\nimport CloseIcon from '@material-ui/icons/Close';\nimport Tag from '../../Tag/Tag'\nimport './ModalEditTransaction.css'\n\nconst ModalEditTransaction = ({props}) => {\n    const [state, setState] = useState({id:props.item.id,titulo:props.item.titulo,descricao:props.item.descricao,modalidade:props.item.modalidade,tipo:props.item.tipo,valor:props.item.valor})\n    const [tags,setTags] = useState([])\n    const user = useSelector(state => state.user)\n    const dispatch = useDispatch()\n\n    const formatDate = (date) => {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n    \n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n    \n        return [year, month, day].join('-');\n    }\n\n    const handleChange = (e) => {\n        setState({...state, [e.target.id]: e.target.value})\n    }\n\n    const handleClose = () => {\n        dispatch(removePost())\n    }\n\n    const handleTags = (e) => {\n        if(e.key === \"Tab\" || e.key === \"Enter\") {\n            e.preventDefault()\n            if (e.target.value !== \"\") {\n                const res = async () => {\n                    return await newTag({data:{tag:{titulo:e.target.value.toLowerCase()},user:user,transaction:props.item,token:localStorage.getItem(\"authToken\")}})\n                } \n\n                res().then((data) => {\n                    setTags([...tags,data.data.tag])\n                })\n                \n                e.target.value = \"\"\n            }\n        }\n    }\n\n    const handleRemoveTag = (state) => {\n        const res = async () => {\n            return await deleteTag(user.email,state.id,localStorage.getItem(\"authToken\"))\n        } \n\n        res().then((data) => {\n            try {\n                if(data.data.tag !== null) {\n                    // eslint-disable-next-line\n                    setTags(tags.filter((tag) => tag.id != data.data.tag.id))\n                }\n            } catch {\n                dispatch(putNotification(\"SERVER_ERROR\"))\n            }\n            \n        })\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n        const res = await updateTransaction({data:{\n            transaction: state,\n            user: user,\n            token: localStorage.getItem(\"authToken\")\n        }})\n\n        try {\n            if(res.data.message === \"Update feito com sucesso!\") {\n                props.handleUpdate(state)\n                dispatch(putNotification(\"EDIT_TRANSACTION_SUCCESS\"))\n                dispatch(removePost())\n            } else {\n                dispatch(putNotification(\"EDIT_TRANSACTION_ERROR\"))\n                \n            }\n        } catch {\n            dispatch(putNotification(\"SERVER_ERROR\"))\n\n        }\n        \n        \n    }\n\n    useEffect(() => {\n        setTags(props.item.tags)\n        // eslint-disable-next-line\n    }, [])\n\n    return (\n        <div className=\"mainModalEditTransaction\">\n            <CloseIcon onClick={() => {handleClose()}} style={{fontSize: 50}} className=\"closeIcon\"/>\n            <form onSubmit={handleSubmit} className=\"mainModalEditTransactionBox\">\n                <div className=\"mainModalEditTransactionContents\">\n                    <span>Editar transação #{props.item.id}</span>\n                    <div className=\"mainModalEditTransactionSection\">\n                        <div className=\"mainModalEditTransactionSectionItem\">\n                            <span>Titulo:</span>\n                            <input onChange={(e) => {handleChange(e)}} defaultValue={props.item.titulo} id=\"titulo\" type=\"text\" required></input>\n                        </div>\n                        <div className=\"mainModalEditTransactionSectionItem\">\n                            <span>Descrição:</span>\n                            <input onChange={(e) => {handleChange(e)}} defaultValue={props.item.descricao} id=\"descricao\" type=\"text\" required></input>\n                        </div>\n                    </div>\n                    <div className=\"mainModalEditTransactionSection\">\n                        <div className=\"mainNewItemsTagDiv\">\n                            {tags.map((tag) => {\n                                return <Tag handleRemoveTag={handleRemoveTag} tag={tag} key={tag.id} />\n                            })}\n                            <input placeholder=\"Ex: comida\" onKeyDown={(e) => {handleTags(e)}} className=\"mainNewItemsTagInput\"></input>\n                        </div>\n                    </div>\n                    <div className=\"mainModalEditTransactionSection\">\n                        <div className=\"mainModalEditTransactionSectionItem\">\n                            <span>Modalidade:</span>\n                            <select onChange={(e) => {handleChange(e)}} defaultValue={props.item.modalidade} id=\"modalidade\" name=\"modalide\">\n                                <option value=\"Manual\">Manual</option>\n                                <option value=\"Recorrente\">Recorrente</option>\n                            </select>\n                        </div>\n                        <div className=\"mainModalEditTransactionSectionItem\">\n                            <span>Tipo:</span>\n                            <select onChange={(e) => {handleChange(e)}} defaultValue={props.item.tipo} id=\"tipo\" name=\"tipo\">\n                                <option value=\"Entrada\">Entrada</option>\n                                <option value=\"Saida\">Saida</option>\n                            </select>\n                        </div>\n                        <div className=\"mainModalEditTransactionSectionItem\">\n                            <span>Valor:</span>\n                            <input onChange={(e) => {handleChange(e)}} defaultValue={props.item.valor} id=\"valor\" min={0} step=\"0.01\" type=\"number\" required></input>\n                        </div>\n                        <div className=\"mainModalEditTransactionSectionItem\">\n                            <span>Data:</span>\n                            <input onChange={() => {}} style={{cursor: \"not-allowed\"}} onClick={(e) => {e.preventDefault()}} value={formatDate(props.item.dataMomento)} id=\"data\" type=\"date\" required></input>\n                        </div>\n                        <div className=\"mainModalEditTransactionSectionItem\">\n                            <span></span>\n                            <button className=\"mainModalEditTransactionConfirm\">Confirmar</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default ModalEditTransaction;\n","import React from 'react';\nimport ModalNewAccount from './ModalNewAccount/ModalNewAccount'\nimport ModalEditTransaction from './ModalEditTransaction/ModalEditTransaction'\nimport './Modal.css'\n\nconst Modal = ({component}) => {\n    const state = {NEW_POST: <ModalNewAccount props={component.props}/>,EDIT_TRAN: <ModalEditTransaction props={component.props}/>}\n    \n    return (\n        <>\n        {state[component.id]}\n        </>\n    )\n}\n\nexport default Modal\n","import React from 'react';\nimport {useDispatch} from 'react-redux'\nimport {removeNotification} from '../../actions'\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport './Notification.css'\n\nconst Notification = ({props,id}) => {\n    const dispatch = useDispatch()\n\n    const handleClose = () => {\n      dispatch(removeNotification({id:id}))\n    }\n  \n    return (\n      <div onClick={handleClose} onAnimationEnd={handleClose} className={`mainNotification ${props.status}`}>\n        <CheckIcon style={{fontSize: 30}}/>\n        <div className=\"mainNotificationContent\">\n          <strong>{props.title}</strong>\n          <span>{props.description}</span>\n        </div>\n        <span className=\"mainNotificationLoader\"></span>\n      </div>\n    )\n}\n\nexport default Notification;\n","import React, {useState,useEffect} from 'react';\nimport {useSelector} from 'react-redux'\nimport {Route,Redirect} from 'react-router-dom'\n\nconst ProtectedRoute = ({component: Component, ...rest}) => {\n    const isLogged = useSelector(state => state.user)\n    const [state,setState] = useState(false)\n    \n    useEffect(() => {\n        setState(isLogged)\n        // eslint-disable-next-line\n    },[])\n\n    if(state === false) {\n        return <></>\n    }\n\n    return (\n        <Route {...rest} render={props => (\n            state ? <Component {...props} /> : <Redirect to={{pathname: '/login', state: {path: rest.path}}} />\n        )} />\n    )\n}\n\nexport default ProtectedRoute;\n","import {Switch, BrowserRouter as Router, Route} from 'react-router-dom'\nimport React, {useEffect,useState} from 'react'\nimport Dashboard from '../pages/Dashboard/Dashboard'\nimport Login from '../pages/Login/Login'\nimport Home from '../pages/Home/Home'\nimport Navbar from './Navbar/Navbar'\nimport Modal from './Modal/Modal'\nimport Notification from './Notification/Notification'\nimport ProtectedRoute from './ProtectedRoute/ProtectedRoute'\nimport {verifyTokenAPI} from '../utils/api/auth'\nimport {useDispatch,useSelector} from 'react-redux'\nimport {signIn} from '../actions'\nimport './App.css';\n\nfunction App() {\n  const havePost = useSelector(state => state.post)\n  const isLogged = useSelector(state => state.user)\n  const allNotifications = useSelector(state => state.notifications)\n  const [state,setState] = useState(false)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n\n    const verify = async () => {\n      return await verifyTokenAPI({data:{token:localStorage.getItem(\"authToken\")}})\n    }\n\n    const setup = async () => {\n      if(localStorage.getItem(\"authToken\") !== null) {\n        try {\n          await verify().then((res) => {\n            if(res.data.message === \"Token verificado!\") {\n              dispatch(signIn(res.data.user))\n            } else {\n              localStorage.removeItem(\"authToken\")\n            }\n          })\n        } catch {\n          \n        }\n      }\n  \n      setState(isLogged)\n    }\n\n    setup()\n\n    \n    // eslint-disable-next-line\n  },[])\n  \n  if (state === false) {\n    return <></>\n  }\n\n  \n\n  return (\n    <div className=\"App\">\n      <div className=\"AppNotifications\">\n        {allNotifications.map((item) => {\n          return <Notification key={item.id} id={item.id} props={item.props}/>\n        })}\n      </div>\n      \n      <Router>\n        <Navbar />\n        <Switch>\n          <ProtectedRoute path=\"/dashboard\" exact component={Dashboard} />\n          <ProtectedRoute path=\"/\" exact component={Home} />\n          <Route path=\"/login\" exact component={Login} />\n        </Switch>\n      </Router>\n      {havePost ? <Modal component={havePost} /> : null}\n    </div>\n  )\n}\n\nexport default App;\n","import { combineReducers } from 'redux'\nimport {userReducer,modalInterface,notificationsInterface} from './reducers'\n\nconst allReducers = combineReducers({\n    user: userReducer,\n    post: modalInterface,\n    notifications: notificationsInterface\n})\n\nexport default allReducers","import { randomstring } from 'randomstring-js'\nimport codes from '../utils/codes.json'\n\nconst userReducer = (state = null, action) => {\n    switch (action.type) {\n        case 'SIGN_OUT':\n            return null\n        case 'SIGN_IN':\n            return action.payload\n        default:\n            return state\n    }\n}\n\nconst modalInterface = (state = null, action) => {\n    switch (action.type) {\n        case 'PUT_POST':\n            return action.payload\n        case 'REMOVE_POST':\n            return null\n        default:\n            return state;\n    }\n}\n\nconst notificationsInterface = (state = [], action) => {\n    switch (action.type) {\n        case 'PUT_NOTIFICATION':\n            return [...state,{props:codes[action.payload],id:randomstring()}]\n        case 'REMOVE_NOTIFICATION':\n            return state.filter((item) => item.id !== action.payload.id)\n        default:\n            return state;\n    }\n}\n\nexport {userReducer,modalInterface,notificationsInterface}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport {createStore} from 'redux'\nimport allReducer from './reducers'\nimport {Provider} from 'react-redux'\n\nconst myStore = createStore(\n    allReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nReactDOM.render(\n    <Provider store={myStore}>\n        <App />\n    </Provider>\n    ,document.getElementById('root')\n)\n"],"sourceRoot":""}